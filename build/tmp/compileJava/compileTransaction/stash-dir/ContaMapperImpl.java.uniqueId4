package com.gerenciamento.financas.api.mapper;

import com.gerenciamento.financas.api.dto.ContaDetail;
import com.gerenciamento.financas.api.form.ContaForm;
import com.gerenciamento.financas.domain.model.entity.Conta;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2023-04-12T21:56:26-0300",
    comments = "version: 1.5.3.Final, compiler: IncrementalProcessingEnvironment from gradle-language-java-7.6.1.jar, environment: Java 17.0.6 (Amazon.com Inc.)"
)
@Component
public class ContaMapperImpl implements ContaMapper {

    @Override
    public ContaDetail toContaDetail(Conta conta) {
        if ( conta == null ) {
            return null;
        }

        ContaDetail.ContaDetailBuilder contaDetail = ContaDetail.builder();

        contaDetail.id( conta.getId() );
        contaDetail.nome( conta.getNome() );
        if ( conta.getSaldo() != null ) {
            contaDetail.saldo( conta.getSaldo().doubleValue() );
        }
        contaDetail.situacao( conta.getSituacao() );

        return contaDetail.build();
    }

    @Override
    public List<ContaDetail> toListContaDetail(List<Conta> contas) {
        if ( contas == null ) {
            return null;
        }

        List<ContaDetail> list = new ArrayList<ContaDetail>( contas.size() );
        for ( Conta conta : contas ) {
            list.add( toContaDetail( conta ) );
        }

        return list;
    }

    @Override
    public Conta toConta(ContaForm contaForm) {
        if ( contaForm == null ) {
            return null;
        }

        Conta conta = new Conta();

        conta.setId( contaForm.getId() );
        conta.setNome( contaForm.getNome() );
        conta.setSaldo( BigDecimal.valueOf( contaForm.getSaldo() ) );
        conta.setSituacao( contaForm.getSituacao() );

        return conta;
    }

    @Override
    public Conta toConta(ContaDetail contaDetail) {
        if ( contaDetail == null ) {
            return null;
        }

        Conta conta = new Conta();

        conta.setId( contaDetail.getId() );
        conta.setNome( contaDetail.getNome() );
        conta.setSaldo( BigDecimal.valueOf( contaDetail.getSaldo() ) );
        conta.setSituacao( contaDetail.getSituacao() );

        return conta;
    }
}
